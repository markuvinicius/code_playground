/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.markuvinicius.playground.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TwitterStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8042310832203634755L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TwitterStatus\",\"namespace\":\"com.markuvinicius.playground.avro\",\"fields\":[{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The Country in with the status was updated\",\"default\":null},{\"name\":\"id\",\"type\":\"long\",\"doc\":\"User identification number on Twitter platform\",\"default\":-1},{\"name\":\"createdAt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The point in time the user was created on Twitter platform\",\"default\":\"\"},{\"name\":\"language\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The language spoken by the user\",\"default\":\"\"},{\"name\":\"favoriteCount\",\"type\":\"int\",\"doc\":\"The number of favorite interactions the status received\",\"default\":0},{\"name\":\"retweetCount\",\"type\":\"int\",\"doc\":\"The number of retweet messages the status received\",\"default\":0},{\"name\":\"text\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The status message\",\"default\":\"\"},{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TwitterUser\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"User identification number on Twitter platform\",\"default\":-1},{\"name\":\"createdAt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The point in time the user was created on Twitter platform\",\"default\":\"\"},{\"name\":\"language\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The language spoken by the user\",\"default\":\"\"},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The user's email\",\"default\":null},{\"name\":\"followersCount\",\"type\":\"int\",\"doc\":\"The number of followers the user has\",\"default\":0},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The user's name\",\"default\":\"\"},{\"name\":\"screenName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The User's name shown on screen\",\"default\":\"\"}]}],\"doc\":\"The user who posted the status\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TwitterStatus> ENCODER =
      new BinaryMessageEncoder<TwitterStatus>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TwitterStatus> DECODER =
      new BinaryMessageDecoder<TwitterStatus>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TwitterStatus> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TwitterStatus> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TwitterStatus>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TwitterStatus to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TwitterStatus from a ByteBuffer. */
  public static TwitterStatus fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The Country in with the status was updated */
   private java.lang.String country;
  /** User identification number on Twitter platform */
   private long id;
  /** The point in time the user was created on Twitter platform */
   private java.lang.String createdAt;
  /** The language spoken by the user */
   private java.lang.String language;
  /** The number of favorite interactions the status received */
   private int favoriteCount;
  /** The number of retweet messages the status received */
   private int retweetCount;
  /** The status message */
   private java.lang.String text;
  /** The user who posted the status */
   private com.markuvinicius.playground.avro.TwitterUser user;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TwitterStatus() {}

  /**
   * All-args constructor.
   * @param country The Country in with the status was updated
   * @param id User identification number on Twitter platform
   * @param createdAt The point in time the user was created on Twitter platform
   * @param language The language spoken by the user
   * @param favoriteCount The number of favorite interactions the status received
   * @param retweetCount The number of retweet messages the status received
   * @param text The status message
   * @param user The user who posted the status
   */
  public TwitterStatus(java.lang.String country, java.lang.Long id, java.lang.String createdAt, java.lang.String language, java.lang.Integer favoriteCount, java.lang.Integer retweetCount, java.lang.String text, com.markuvinicius.playground.avro.TwitterUser user) {
    this.country = country;
    this.id = id;
    this.createdAt = createdAt;
    this.language = language;
    this.favoriteCount = favoriteCount;
    this.retweetCount = retweetCount;
    this.text = text;
    this.user = user;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return country;
    case 1: return id;
    case 2: return createdAt;
    case 3: return language;
    case 4: return favoriteCount;
    case 5: return retweetCount;
    case 6: return text;
    case 7: return user;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: country = (java.lang.String)value$; break;
    case 1: id = (java.lang.Long)value$; break;
    case 2: createdAt = (java.lang.String)value$; break;
    case 3: language = (java.lang.String)value$; break;
    case 4: favoriteCount = (java.lang.Integer)value$; break;
    case 5: retweetCount = (java.lang.Integer)value$; break;
    case 6: text = (java.lang.String)value$; break;
    case 7: user = (com.markuvinicius.playground.avro.TwitterUser)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'country' field.
   * @return The Country in with the status was updated
   */
  public java.lang.String getCountry() {
    return country;
  }


  /**
   * Gets the value of the 'id' field.
   * @return User identification number on Twitter platform
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Gets the value of the 'createdAt' field.
   * @return The point in time the user was created on Twitter platform
   */
  public java.lang.String getCreatedAt() {
    return createdAt;
  }


  /**
   * Gets the value of the 'language' field.
   * @return The language spoken by the user
   */
  public java.lang.String getLanguage() {
    return language;
  }


  /**
   * Gets the value of the 'favoriteCount' field.
   * @return The number of favorite interactions the status received
   */
  public java.lang.Integer getFavoriteCount() {
    return favoriteCount;
  }


  /**
   * Gets the value of the 'retweetCount' field.
   * @return The number of retweet messages the status received
   */
  public java.lang.Integer getRetweetCount() {
    return retweetCount;
  }


  /**
   * Gets the value of the 'text' field.
   * @return The status message
   */
  public java.lang.String getText() {
    return text;
  }


  /**
   * Gets the value of the 'user' field.
   * @return The user who posted the status
   */
  public com.markuvinicius.playground.avro.TwitterUser getUser() {
    return user;
  }


  /**
   * Creates a new TwitterStatus RecordBuilder.
   * @return A new TwitterStatus RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TwitterStatus.Builder newBuilder() {
    return new com.markuvinicius.playground.avro.TwitterStatus.Builder();
  }

  /**
   * Creates a new TwitterStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TwitterStatus RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TwitterStatus.Builder newBuilder(com.markuvinicius.playground.avro.TwitterStatus.Builder other) {
    return new com.markuvinicius.playground.avro.TwitterStatus.Builder(other);
  }

  /**
   * Creates a new TwitterStatus RecordBuilder by copying an existing TwitterStatus instance.
   * @param other The existing instance to copy.
   * @return A new TwitterStatus RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TwitterStatus.Builder newBuilder(com.markuvinicius.playground.avro.TwitterStatus other) {
    return new com.markuvinicius.playground.avro.TwitterStatus.Builder(other);
  }

  /**
   * RecordBuilder for TwitterStatus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TwitterStatus>
    implements org.apache.avro.data.RecordBuilder<TwitterStatus> {

    /** The Country in with the status was updated */
    private java.lang.String country;
    /** User identification number on Twitter platform */
    private long id;
    /** The point in time the user was created on Twitter platform */
    private java.lang.String createdAt;
    /** The language spoken by the user */
    private java.lang.String language;
    /** The number of favorite interactions the status received */
    private int favoriteCount;
    /** The number of retweet messages the status received */
    private int retweetCount;
    /** The status message */
    private java.lang.String text;
    /** The user who posted the status */
    private com.markuvinicius.playground.avro.TwitterUser user;
    private com.markuvinicius.playground.avro.TwitterUser.Builder userBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.markuvinicius.playground.avro.TwitterStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.country)) {
        this.country = data().deepCopy(fields()[0].schema(), other.country);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.favoriteCount)) {
        this.favoriteCount = data().deepCopy(fields()[4].schema(), other.favoriteCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.retweetCount)) {
        this.retweetCount = data().deepCopy(fields()[5].schema(), other.retweetCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.text)) {
        this.text = data().deepCopy(fields()[6].schema(), other.text);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user)) {
        this.user = data().deepCopy(fields()[7].schema(), other.user);
        fieldSetFlags()[7] = true;
      }
      if (other.hasUserBuilder()) {
        this.userBuilder = com.markuvinicius.playground.avro.TwitterUser.newBuilder(other.getUserBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TwitterStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(com.markuvinicius.playground.avro.TwitterStatus other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.country)) {
        this.country = data().deepCopy(fields()[0].schema(), other.country);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.favoriteCount)) {
        this.favoriteCount = data().deepCopy(fields()[4].schema(), other.favoriteCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.retweetCount)) {
        this.retweetCount = data().deepCopy(fields()[5].schema(), other.retweetCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.text)) {
        this.text = data().deepCopy(fields()[6].schema(), other.text);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user)) {
        this.user = data().deepCopy(fields()[7].schema(), other.user);
        fieldSetFlags()[7] = true;
      }
      this.userBuilder = null;
    }

    /**
      * Gets the value of the 'country' field.
      * The Country in with the status was updated
      * @return The value.
      */
    public java.lang.String getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * The Country in with the status was updated
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setCountry(java.lang.String value) {
      validate(fields()[0], value);
      this.country = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * The Country in with the status was updated
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'country' field.
      * The Country in with the status was updated
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearCountry() {
      country = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * User identification number on Twitter platform
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * User identification number on Twitter platform
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setId(long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * User identification number on Twitter platform
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * User identification number on Twitter platform
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * The point in time the user was created on Twitter platform
      * @return The value.
      */
    public java.lang.String getCreatedAt() {
      return createdAt;
    }

    /**
      * Sets the value of the 'createdAt' field.
      * The point in time the user was created on Twitter platform
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setCreatedAt(java.lang.String value) {
      validate(fields()[2], value);
      this.createdAt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * The point in time the user was created on Twitter platform
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * The point in time the user was created on Twitter platform
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * The language spoken by the user
      * @return The value.
      */
    public java.lang.String getLanguage() {
      return language;
    }

    /**
      * Sets the value of the 'language' field.
      * The language spoken by the user
      * @param value The value of 'language'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setLanguage(java.lang.String value) {
      validate(fields()[3], value);
      this.language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * The language spoken by the user
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'language' field.
      * The language spoken by the user
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'favoriteCount' field.
      * The number of favorite interactions the status received
      * @return The value.
      */
    public java.lang.Integer getFavoriteCount() {
      return favoriteCount;
    }

    /**
      * Sets the value of the 'favoriteCount' field.
      * The number of favorite interactions the status received
      * @param value The value of 'favoriteCount'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setFavoriteCount(int value) {
      validate(fields()[4], value);
      this.favoriteCount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'favoriteCount' field has been set.
      * The number of favorite interactions the status received
      * @return True if the 'favoriteCount' field has been set, false otherwise.
      */
    public boolean hasFavoriteCount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'favoriteCount' field.
      * The number of favorite interactions the status received
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearFavoriteCount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'retweetCount' field.
      * The number of retweet messages the status received
      * @return The value.
      */
    public java.lang.Integer getRetweetCount() {
      return retweetCount;
    }

    /**
      * Sets the value of the 'retweetCount' field.
      * The number of retweet messages the status received
      * @param value The value of 'retweetCount'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setRetweetCount(int value) {
      validate(fields()[5], value);
      this.retweetCount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'retweetCount' field has been set.
      * The number of retweet messages the status received
      * @return True if the 'retweetCount' field has been set, false otherwise.
      */
    public boolean hasRetweetCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'retweetCount' field.
      * The number of retweet messages the status received
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearRetweetCount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * The status message
      * @return The value.
      */
    public java.lang.String getText() {
      return text;
    }

    /**
      * Sets the value of the 'text' field.
      * The status message
      * @param value The value of 'text'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setText(java.lang.String value) {
      validate(fields()[6], value);
      this.text = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * The status message
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'text' field.
      * The status message
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearText() {
      text = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'user' field.
      * The user who posted the status
      * @return The value.
      */
    public com.markuvinicius.playground.avro.TwitterUser getUser() {
      return user;
    }

    /**
      * Sets the value of the 'user' field.
      * The user who posted the status
      * @param value The value of 'user'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setUser(com.markuvinicius.playground.avro.TwitterUser value) {
      validate(fields()[7], value);
      this.userBuilder = null;
      this.user = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'user' field has been set.
      * The user who posted the status
      * @return True if the 'user' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'user' field and creates one if it doesn't exist yet.
     * The user who posted the status
     * @return This builder.
     */
    public com.markuvinicius.playground.avro.TwitterUser.Builder getUserBuilder() {
      if (userBuilder == null) {
        if (hasUser()) {
          setUserBuilder(com.markuvinicius.playground.avro.TwitterUser.newBuilder(user));
        } else {
          setUserBuilder(com.markuvinicius.playground.avro.TwitterUser.newBuilder());
        }
      }
      return userBuilder;
    }

    /**
     * Sets the Builder instance for the 'user' field
     * The user who posted the status
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder setUserBuilder(com.markuvinicius.playground.avro.TwitterUser.Builder value) {
      clearUser();
      userBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'user' field has an active Builder instance
     * The user who posted the status
     * @return True if the 'user' field has an active Builder instance
     */
    public boolean hasUserBuilder() {
      return userBuilder != null;
    }

    /**
      * Clears the value of the 'user' field.
      * The user who posted the status
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TwitterStatus.Builder clearUser() {
      user = null;
      userBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TwitterStatus build() {
      try {
        TwitterStatus record = new TwitterStatus();
        record.country = fieldSetFlags()[0] ? this.country : (java.lang.String) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.Long) defaultValue(fields()[1]);
        record.createdAt = fieldSetFlags()[2] ? this.createdAt : (java.lang.String) defaultValue(fields()[2]);
        record.language = fieldSetFlags()[3] ? this.language : (java.lang.String) defaultValue(fields()[3]);
        record.favoriteCount = fieldSetFlags()[4] ? this.favoriteCount : (java.lang.Integer) defaultValue(fields()[4]);
        record.retweetCount = fieldSetFlags()[5] ? this.retweetCount : (java.lang.Integer) defaultValue(fields()[5]);
        record.text = fieldSetFlags()[6] ? this.text : (java.lang.String) defaultValue(fields()[6]);
        if (userBuilder != null) {
          record.user = this.userBuilder.build();
        } else {
          record.user = fieldSetFlags()[7] ? this.user : (com.markuvinicius.playground.avro.TwitterUser) defaultValue(fields()[7]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TwitterStatus>
    WRITER$ = (org.apache.avro.io.DatumWriter<TwitterStatus>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TwitterStatus>
    READER$ = (org.apache.avro.io.DatumReader<TwitterStatus>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
