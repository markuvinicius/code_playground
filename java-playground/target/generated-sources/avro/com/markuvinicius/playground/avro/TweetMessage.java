/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.markuvinicius.playground.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TweetMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8684312095788226724L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TweetMessage\",\"namespace\":\"com.markuvinicius.playground.avro\",\"fields\":[{\"name\":\"user_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"name of the user\"},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"date when the tweet message was originally posted\"},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"the message itself\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TweetMessage> ENCODER =
      new BinaryMessageEncoder<TweetMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TweetMessage> DECODER =
      new BinaryMessageDecoder<TweetMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TweetMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TweetMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TweetMessage>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TweetMessage to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TweetMessage from a ByteBuffer. */
  public static TweetMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** name of the user */
   private java.lang.String user_name;
  /** date when the tweet message was originally posted */
   private java.lang.String timestamp;
  /** the message itself */
   private java.lang.String message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TweetMessage() {}

  /**
   * All-args constructor.
   * @param user_name name of the user
   * @param timestamp date when the tweet message was originally posted
   * @param message the message itself
   */
  public TweetMessage(java.lang.String user_name, java.lang.String timestamp, java.lang.String message) {
    this.user_name = user_name;
    this.timestamp = timestamp;
    this.message = message;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user_name;
    case 1: return timestamp;
    case 2: return message;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user_name = (java.lang.String)value$; break;
    case 1: timestamp = (java.lang.String)value$; break;
    case 2: message = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user_name' field.
   * @return name of the user
   */
  public java.lang.String getUserName() {
    return user_name;
  }


  /**
   * Gets the value of the 'timestamp' field.
   * @return date when the tweet message was originally posted
   */
  public java.lang.String getTimestamp() {
    return timestamp;
  }


  /**
   * Gets the value of the 'message' field.
   * @return the message itself
   */
  public java.lang.String getMessage() {
    return message;
  }


  /**
   * Creates a new TweetMessage RecordBuilder.
   * @return A new TweetMessage RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TweetMessage.Builder newBuilder() {
    return new com.markuvinicius.playground.avro.TweetMessage.Builder();
  }

  /**
   * Creates a new TweetMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TweetMessage RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TweetMessage.Builder newBuilder(com.markuvinicius.playground.avro.TweetMessage.Builder other) {
    return new com.markuvinicius.playground.avro.TweetMessage.Builder(other);
  }

  /**
   * Creates a new TweetMessage RecordBuilder by copying an existing TweetMessage instance.
   * @param other The existing instance to copy.
   * @return A new TweetMessage RecordBuilder
   */
  public static com.markuvinicius.playground.avro.TweetMessage.Builder newBuilder(com.markuvinicius.playground.avro.TweetMessage other) {
    return new com.markuvinicius.playground.avro.TweetMessage.Builder(other);
  }

  /**
   * RecordBuilder for TweetMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TweetMessage>
    implements org.apache.avro.data.RecordBuilder<TweetMessage> {

    /** name of the user */
    private java.lang.String user_name;
    /** date when the tweet message was originally posted */
    private java.lang.String timestamp;
    /** the message itself */
    private java.lang.String message;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.markuvinicius.playground.avro.TweetMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user_name)) {
        this.user_name = data().deepCopy(fields()[0].schema(), other.user_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TweetMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.markuvinicius.playground.avro.TweetMessage other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.user_name)) {
        this.user_name = data().deepCopy(fields()[0].schema(), other.user_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'user_name' field.
      * name of the user
      * @return The value.
      */
    public java.lang.String getUserName() {
      return user_name;
    }

    /**
      * Sets the value of the 'user_name' field.
      * name of the user
      * @param value The value of 'user_name'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder setUserName(java.lang.String value) {
      validate(fields()[0], value);
      this.user_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'user_name' field has been set.
      * name of the user
      * @return True if the 'user_name' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'user_name' field.
      * name of the user
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder clearUserName() {
      user_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * date when the tweet message was originally posted
      * @return The value.
      */
    public java.lang.String getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * date when the tweet message was originally posted
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder setTimestamp(java.lang.String value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * date when the tweet message was originally posted
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * date when the tweet message was originally posted
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * the message itself
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * the message itself
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder setMessage(java.lang.String value) {
      validate(fields()[2], value);
      this.message = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * the message itself
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'message' field.
      * the message itself
      * @return This builder.
      */
    public com.markuvinicius.playground.avro.TweetMessage.Builder clearMessage() {
      message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TweetMessage build() {
      try {
        TweetMessage record = new TweetMessage();
        record.user_name = fieldSetFlags()[0] ? this.user_name : (java.lang.String) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.String) defaultValue(fields()[1]);
        record.message = fieldSetFlags()[2] ? this.message : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TweetMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<TweetMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TweetMessage>
    READER$ = (org.apache.avro.io.DatumReader<TweetMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
